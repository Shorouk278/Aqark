//
//  AddAdvertisementDataSource.swift
//  Aqark
//
//  Created by AhmedSaeed on 5/14/20.
//  Copyright Â© 2020 ITI. All rights reserved.
//

import Foundation
import Firebase

class AddAdvertisementDataSource{
    var dataBaseRef: DatabaseReference!
    var storageRef: StorageReference!
    var taskPerformace:StorageUploadTask!
    var advertisement: AddAdvertisementModel!
    var images : [String] = [String]()
    var address : [String : String] = [String : String]()
    var add : [String : Any] = [String : Any]()
    var advertisementAutoGeneratedName :String!
    var  userID : String!
    var numberOfAdvertisement = 0
    var index = 0
    
    func initializeAddAdvertisementDataSource(advertisement: AddAdvertisementModel){
        self.advertisement = advertisement
        self.dataBaseRef = Database.database().reference()
        userID = Auth.auth().currentUser?.uid
        advertisementAutoGeneratedName = dataBaseRef.childByAutoId().key!
        checkPaymentType()
    }
    
   private func checkPaymentType (){
    dataBaseRef.child("Users_Ads").child(userID).child("countOfFree").observeSingleEvent(of: .value) {[weak self] (data) in
            if let value = data.value{
                if value is NSNull {
                    self?.uploadeImageToStorage()
                   
                }else{
                    self?.numberOfAdvertisement = value as! Int
                    if(self?.numberOfAdvertisement ?? 0 < 2)
                    {
                       self?.uploadeImageToStorage()
                    }else{
                        if self?.advertisement.payment == "free"{
                        self?.addPremiumAdvertisement()
                        }else{
                            //upload advertisement
                            self?.uploadeImageToStorage()
                        }
                        

                    }
                    
                }
            }
        }
    }
    
    func uploadeImageToStorage(){
        let meta = StorageMetadata.init()
        meta.contentType = "image/jpeg"
        let randomUUID = UUID.init().uuidString
        storageRef = Storage.storage().reference(withPath: "images/\(randomUUID).jpg")
        
        self.storageRef.putData(advertisement.images[index], metadata: meta) {[weak self] (metadata, error) in
                self!.getImageUrl {[weak self] (value, myError) in
                    if myError == nil{
                        self?.images.append(value!)
                        if self?.images.count != self?.advertisement.images.count
                        {
                            self!.index = self!.index+1
                            self?.uploadeImageToStorage()
                        }else{
                            
                            if self!.numberOfAdvertisement == 0 {
                                self!.addFirstFreeAdvertisement()
                            }else{
                                self!.addSecondFreeAdvertisement()
                            }
                            
                            NotificationCenter.default.post(name: .indicator, object: nil)
                        }
                    }
                }
            }
    }
    func getImageUrl(comoletionValue : @escaping (String? , Error?)->Void){
        self.storageRef.downloadURL {(url, error) in
            guard let url = url else {return}
            comoletionValue("\(url)", error)
        }
    }
    
    func addFirstFreeAdvertisement()
    {
        self.uploadAdvertisement()
        self.dataBaseRef.child("Users_Ads").child(self.userID).child("countOfFree").setValue(1)
        self.dataBaseRef.child("Users_Ads").child(self.userID).child("advertisements").setValue([self.advertisementAutoGeneratedName])
    }
    
    func addSecondFreeAdvertisement()
       {
           self.uploadAdvertisement()
           self.dataBaseRef.child("Users_Ads").child(self.userID).child("countOfFree").setValue(2)
           self.dataBaseRef.child("Users_Ads").child(self.userID).child("advertisements").observeSingleEvent(of: .value) {[weak self] (snapshot) in
               if snapshot.exists()
               {
                  if var allAdvertisement = snapshot.value as? [String]
                  {
                    allAdvertisement.append(self?.advertisementAutoGeneratedName ?? "")
                    self?.dataBaseRef.child("Users_Ads").child(self?.userID ?? "").child("advertisements").setValue(allAdvertisement)
                  }
              
               }
               else
               {
                self?.dataBaseRef.child("Users_Ads").child(self?.userID ?? "").child("advertisements").setValue([self?.advertisementAutoGeneratedName])
               }

           }
       }
       
    func uploadAdvertisement()
    {
        address = ["location": advertisement.location,
                   "latitude":advertisement.latitude,
                   "longitude": advertisement.longitude]
        
        add = [ "propertyType": advertisement.propertyType,
                "Advertisement Type": advertisement.advertisementType,
                "price" : advertisement.price,
                "bedRooms" : advertisement.bedrooms,
                "bathRooms" : advertisement.bathroom,
                "size" : advertisement.size,
                "phone" : advertisement.phone,
                "country": advertisement.country,
                "description": advertisement.description,
                "date" : advertisement.date,
                "Address" : address,
                "amenities" : advertisement.aminities,
                "UserId" : userID,
                "payment" : advertisement.payment,
                "images" : images]
      self.dataBaseRef.child("Advertisements").child(self.advertisementAutoGeneratedName!).setValue(self.add)
    }
    
    func addPremiumAdvertisement(){
        NotificationCenter.default.post(name: .alert,object:nil)
    }
}
